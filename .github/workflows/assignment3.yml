name: Books Service CI/CD Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build Docker image
        run: |
          docker build -t books-service .
          echo "Docker Image Built Successfully"

      - name: Save Docker image
        run: |
          docker save books-service | gzip > books-service.tar.gz

      - name: Upload Docker image
        uses: actions/upload-artifact@v2
        with:
          name: docker-image
          path: books-service.tar.gz

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Docker image
        uses: actions/download-artifact@v2
        with:
          name: docker-image

      - name: Load Docker image
        run: |
          gunzip -c books-service.tar.gz | docker load

      - name: Start MongoDB container
        run: |
          docker run --name mongodb -d mongo

      - name: Start Books Service container
        run: |
          docker run --name books-service --link mongodb:mongo -p 5001:5001 -d books-service

      - name: Set up Python environment
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          pip install pytest

      - name: Run tests
        run: |
          docker exec books-service pytest tests/assn3_tests.py -v > assn3_test_results.txt

      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: assn3_test_results.txt

  query:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download Docker image and test results
        uses: actions/download-artifact@v2
        with:
          name: test-results

      - name: Load Docker image
        run: |
          gunzip -c books-service.tar.gz | docker load

      - name: Start MongoDB container
        run: |
          docker run --name mongodb -d mongo

      - name: Start Books Service container
        run: |
          docker run --name books-service --link mongodb:mongo -p 5001:5001 -d books-service

      - name: Run query processor
        run: |
          python scripts/process_queries.py

      - name: Upload query results
        uses: actions/upload-artifact@v2
        with:
          name: final-results
          path: response.txt
